openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/venues/:
    get:
      operationId: listVenues
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VenueSerialization'
          description: ''
      tags:
      - api
    post:
      operationId: createVenue
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueSerialization'
          description: ''
      tags:
      - api
  /api/venues/{venueCode}/:
    get:
      operationId: retrieveVenue
      description: ''
      parameters:
      - name: venueCode
        in: path
        required: true
        description: A unique value identifying this venue.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueSerialization'
          description: ''
      tags:
      - api
    put:
      operationId: updateVenue
      description: ''
      parameters:
      - name: venueCode
        in: path
        required: true
        description: A unique value identifying this venue.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueSerialization'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVenue
      description: ''
      parameters:
      - name: venueCode
        in: path
        required: true
        description: A unique value identifying this venue.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VenueSerialization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueSerialization'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVenue
      description: ''
      parameters:
      - name: venueCode
        in: path
        required: true
        description: A unique value identifying this venue.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/hku-members/:
    get:
      operationId: listHKUMembers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HKUMemberSerialization'
          description: ''
      tags:
      - api
    post:
      operationId: createHKUMember
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMemberSerialization'
          description: ''
      tags:
      - api
  /api/hku-members/{HKUID}/:
    get:
      operationId: retrieveHKUMember
      description: ''
      parameters:
      - name: HKUID
        in: path
        required: true
        description: A unique value identifying this hku member.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMemberSerialization'
          description: ''
      tags:
      - api
    put:
      operationId: updateHKUMember
      description: ''
      parameters:
      - name: HKUID
        in: path
        required: true
        description: A unique value identifying this hku member.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMemberSerialization'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateHKUMember
      description: ''
      parameters:
      - name: HKUID
        in: path
        required: true
        description: A unique value identifying this hku member.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/HKUMemberSerialization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HKUMemberSerialization'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyHKUMember
      description: ''
      parameters:
      - name: HKUID
        in: path
        required: true
        description: A unique value identifying this hku member.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/entry-exit-records/:
    get:
      operationId: listVenueEntryExitRecords
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          description: ''
      tags:
      - api
    post:
      operationId: createVenueEntryExitRecord
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          description: ''
      tags:
      - api
  /api/entry-exit-records/{id}/:
    get:
      operationId: retrieveVenueEntryExitRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue entry exit record.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          description: ''
      tags:
      - api
    put:
      operationId: updateVenueEntryExitRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue entry exit record.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateVenueEntryExitRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue entry exit record.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VenueEntryExitRecordSerialization'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyVenueEntryExitRecord
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this venue entry exit record.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/visitedVenues/:
    get:
      operationId: listVenueEntryExitRecords
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetVisitedVenuesSerialization'
          description: ''
      tags:
      - api
  /api/closeContacts/:
    get:
      operationId: listVenueEntryExitRecords
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCloseContactsSerialization'
          description: ''
      tags:
      - api
  /api/exit/:
    post:
      operationId: createVenueEntryExitRecord
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExitRecordSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExitRecordSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExitRecordSerialization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExitRecordSerialization'
          description: ''
      tags:
      - api
  /api/entry/:
    post:
      operationId: createVenueEntryExitRecord
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryRecordSerialization'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EntryRecordSerialization'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EntryRecordSerialization'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntryRecordSerialization'
          description: ''
      tags:
      - api
components:
  schemas:
    VenueSerialization:
      type: object
      properties:
        venueCode:
          type: string
          maxLength: 20
        location:
          type: string
          maxLength: 150
        type:
          enum:
          - LT
          - CR
          - TR
          type: string
        capacity:
          type: integer
      required:
      - venueCode
      - location
      - type
      - capacity
    HKUMemberSerialization:
      type: object
      properties:
        HKUID:
          type: string
          maxLength: 10
        name:
          type: string
          maxLength: 150
      required:
      - HKUID
      - name
    VenueEntryExitRecordSerialization:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        entryDatetime:
          type: string
          format: date-time
        exitDatetime:
          type: string
          format: date-time
          nullable: true
        duration:
          type: string
          nullable: true
        venue:
          type: string
        hkuMember:
          type: string
      required:
      - entryDatetime
      - venue
      - hkuMember
    GetVisitedVenuesSerialization:
      type: object
      properties:
        dateDiagnosis:
          type: string
          format: date
        hkuMember:
          type: string
          maxLength: 10
      required:
      - dateDiagnosis
      - hkuMember
    GetCloseContactsSerialization:
      type: object
      properties:
        dateDiagnosis:
          type: string
          format: date
        hkuMember:
          type: string
          maxLength: 10
      required:
      - dateDiagnosis
      - hkuMember
    ExitRecordSerialization:
      type: object
      properties:
        hkuMember:
          type: string
        venue:
          type: string
        exitDatetime:
          type: string
          format: date-time
          nullable: true
      required:
      - hkuMember
      - venue
    EntryRecordSerialization:
      type: object
      properties:
        hkuMember:
          type: string
        venue:
          type: string
        entryDatetime:
          type: string
          format: date-time
      required:
      - hkuMember
      - venue
      - entryDatetime
